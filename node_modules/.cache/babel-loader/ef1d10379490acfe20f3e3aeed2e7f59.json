{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend\\\\Websites\\\\weather\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.sass\";\nimport clearSky from \"./images/clear_sky.svg\";\nimport flewClouds from \"./images/few_clouds.svg\";\nimport nightFewClouds from \"./images/night_few_clouds.svg\";\nimport rain from \"./images/rain.svg\";\nimport scatteredClouds from \"./images/scattered_clouds.svg\";\nimport showerRain from \"./images/shower_rain.svg\";\nimport snow from \"./images/snow.svg\";\nimport thunderStorm from \"./images/thunderstorm.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"cb6c26f0569f865f8485400d1d8d011a\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery(\"\");\n        console.log(result);\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const switchImg = () => {\n    switch (weather.weather[0].description) {\n      case \"clear sky\":\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: clearSky,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }, this);\n      // case \"overcast clouds\":\n      //   return <img src={ov} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? \"app warm\" : \"app\" : \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-box\",\n            children: switchImg()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0c\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather\",\n              children: weather.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search...\",\n            onChange: e => setQuery(e.target.value),\n            value: query,\n            onKeyPress: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = App;\nexport default App; // const App = () => {\n//   const apiKey = \"80994b1574c7b5d9eb9980beb34d3c09\";\n//   const [weatherData, setWeatherData] = useState({});\n//   const [city, setCity] = useState(\"\");\n//   const getWeather = (event) => {\n//     if (event.key === \"Enter\") {\n//       fetch(`api.openweathermap.org/data/2.5/weather?q=Dallas&APPID=${apiKey}`)\n//         .then((response) =>  response.json())\n//         .then((data) => {\n//           setWeatherData(data);\n//           setCity(\"\");\n//         });\n//     }\n//   };\n//   //   fetch(url)\n//   //   .then((response) => response.json())\n//   //   .then((json) => resolve(json))\n//   //   .catch((error) => reject(error))\n//   // );\n//   console.log(weatherData);\n//   return (\n//     <div className=\"container\">\n//       <input\n//         className=\"input\"\n//         placeholder=\"Enter City...\"\n//         type=\"text\"\n//         onChange={(e) => setCity(e.target.value)}\n//         value={city}\n//         onKeyPress={getWeather}\n//       />\n//       {typeof weatherData.main === \"undefined\" ? (\n//         <div>\n//           <p>Welcome to weather app! Enter in a city to get the weather of</p>\n//         </div>\n//       ) : (\n//         <div>\n//           <p>{weatherData.name}</p>\n//           <p>{Math.round(weatherData.main.temp)}</p>\n//           <p>{weatherData.wether[0].main}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Frontend/Websites/weather/src/App.js"],"names":["React","useState","clearSky","flewClouds","nightFewClouds","rain","scatteredClouds","showerRain","snow","thunderStorm","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","switchImg","description","main","temp","Date","name","sys","country","Math","round","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.sass\";\nimport clearSky from \"./images/clear_sky.svg\";\nimport flewClouds from \"./images/few_clouds.svg\";\nimport nightFewClouds from \"./images/night_few_clouds.svg\";\nimport rain from \"./images/rain.svg\";\nimport scatteredClouds from \"./images/scattered_clouds.svg\";\nimport showerRain from \"./images/shower_rain.svg\";\nimport snow from \"./images/snow.svg\";\nimport thunderStorm from \"./images/thunderstorm.svg\";\n\nconst api = {\n  key: \"cb6c26f0569f865f8485400d1d8d011a\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          console.log(result);\n        });\n    }\n  };\n\n  const dateBuilder = (d) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const switchImg = () => {\n    switch (weather.weather[0].description) {\n      case \"clear sky\":\n        return <img src={clearSky} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={ov} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      // case \"overcast clouds\":\n      //   return <img src={} alt=\"\" />;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div\n      className={\n        typeof weather.main != \"undefined\"\n          ? weather.main.temp > 16\n            ? \"app warm\"\n            : \"app\"\n          : \"app\"\n      }\n    >\n      <main>\n        <div className=\"container\">\n          {typeof weather.main != \"undefined\" ? (\n            <div>\n              <div className=\"location-box\">\n                <div className=\"date\">{dateBuilder(new Date())}</div>\n                <div className=\"location\">\n                  {weather.name}, {weather.sys.country}\n                </div>\n              </div>\n              <div className=\"image-box\">{switchImg()}</div>\n              <div className=\"weather-box\">\n                <div className=\"temp\">{Math.round(weather.main.temp)}°c</div>\n                <div className=\"weather\">{weather.weather[0].description}</div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              placeholder=\"Search...\"\n              onChange={(e) => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n// const App = () => {\n//   const apiKey = \"80994b1574c7b5d9eb9980beb34d3c09\";\n//   const [weatherData, setWeatherData] = useState({});\n//   const [city, setCity] = useState(\"\");\n\n//   const getWeather = (event) => {\n//     if (event.key === \"Enter\") {\n//       fetch(`api.openweathermap.org/data/2.5/weather?q=Dallas&APPID=${apiKey}`)\n//         .then((response) =>  response.json())\n//         .then((data) => {\n//           setWeatherData(data);\n//           setCity(\"\");\n//         });\n//     }\n//   };\n\n//   //   fetch(url)\n//   //   .then((response) => response.json())\n//   //   .then((json) => resolve(json))\n//   //   .catch((error) => reject(error))\n//   // );\n\n//   console.log(weatherData);\n//   return (\n//     <div className=\"container\">\n//       <input\n//         className=\"input\"\n//         placeholder=\"Enter City...\"\n//         type=\"text\"\n//         onChange={(e) => setCity(e.target.value)}\n//         value={city}\n//         onKeyPress={getWeather}\n//       />\n\n//       {typeof weatherData.main === \"undefined\" ? (\n//         <div>\n//           <p>Welcome to weather app! Enter in a city to get the weather of</p>\n//         </div>\n//       ) : (\n//         <div>\n//           <p>{weatherData.name}</p>\n//           <p>{Math.round(weatherData.main.temp)}</p>\n//           <p>{weatherData.wether[0].main}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}