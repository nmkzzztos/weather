{"ast":null,"code":"var _jsxFileName = \"C:\\\\Frontend\\\\Websites\\\\weather\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport \"moment-timezone\";\nimport Footer from \"./Footer\";\nimport clearSky from \"../images/clear_sky.svg\";\nimport fewClouds from \"../images/few_clouds.svg\";\nimport nightFewClouds from \"../images/night_few_clouds.svg\";\nimport nightClearSky from \"../images/night_clear_sky.svg\";\nimport scatteredClouds from \"../images/scattered_clouds.svg\";\nimport showerRain from \"../images/shower_rain.svg\";\nimport snow from \"../images/snow.svg\";\nimport thunderStorm from \"../images/thunderstorm.svg\";\nimport weatherLogo from \"../images/weather-logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"cb6c26f0569f865f8485400d1d8d011a\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst date = new Date();\n\nconst Main = () => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery(\"\");\n      });\n    }\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return ` ${day}, ${date} ${month} ${year}`;\n  };\n\n  const getContinent = () => {\n    console.log(weather.sys.country);\n\n    if (weather.sys.country === \"ES\" || weather.sys.country === \"DE\") {\n      return \"Europe\";\n    }\n\n    return;\n  };\n\n  const switchImg = () => {\n    if (date.getHours() < 6 || date.getHours() > 21) {\n      switch (weather.weather[0].main) {\n        case \"Clear\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nightClearSky,\n            alt: \"illustration weather description clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this);\n\n        case \"Clouds\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: nightFewClouds,\n            alt: \"illustration weather description clouds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this);\n\n        case \"Drizzle\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scatteredClouds,\n            alt: \"illustration weather description drizzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this);\n\n        case \"Rain\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: showerRain,\n            alt: \"illustration weather description rain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this);\n\n        case \"Thunderstorm\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: thunderStorm,\n            alt: \"illustration weather description thunderstorm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this);\n\n        case \"Snow\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: snow,\n            alt: \"illustration weather description snow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 18\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scatteredClouds,\n            alt: \"illustration weather description clouds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this);\n      }\n    } else {\n      switch (weather.weather[0].main) {\n        case \"Clear\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: clearSky,\n            alt: \"illustration weather description clear sky\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this);\n\n        case \"Clouds\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: fewClouds,\n            alt: \"illustration weather description clouds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this);\n\n        case \"Drizzle\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scatteredClouds,\n            alt: \"illustration weather description drizzle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this);\n\n        case \"Rain\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: showerRain,\n            alt: \"illustration weather description rain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this);\n\n        case \"Thunderstorm\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: thunderStorm,\n            alt: \"illustration weather description thunderstorm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this);\n\n        case \"Snow\":\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: snow,\n            alt: \"illustration weather description snow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 18\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: scatteredClouds,\n            alt: \"illustration weather description clouds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main != \"undefined\" ? weather.main.temp > 16 ? \"app warm\" : \"app\" : \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"weather-logo\",\n          src: weatherLogo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), typeof weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"temp\",\n              children: Math.round(weather.main.temp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"deg\",\n              children: \"\\xB0c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-box\",\n            children: switchImg()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location\",\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: moment().tz(`${getContinent()}/${weather.name}`).format(\"hh:mm\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), dateBuilder(date)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hint\",\n          children: \"Write the name of the city in the search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search...\",\n            onChange: e => setQuery(e.target.value),\n            value: query,\n            onKeyPress: search\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"GVng0aXCH4yLtaeOWbs04pRRVUQ=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Frontend/Websites/weather/src/components/Main.js"],"names":["React","useState","moment","Footer","clearSky","fewClouds","nightFewClouds","nightClearSky","scatteredClouds","showerRain","snow","thunderStorm","weatherLogo","api","key","base","date","Date","Main","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","dateBuilder","d","months","days","day","getDay","getDate","month","getMonth","year","getFullYear","getContinent","console","log","sys","country","switchImg","getHours","main","temp","Math","round","name","tz","format","description","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport \"moment-timezone\";\r\n\r\nimport Footer from \"./Footer\";\r\n\r\nimport clearSky from \"../images/clear_sky.svg\";\r\nimport fewClouds from \"../images/few_clouds.svg\";\r\nimport nightFewClouds from \"../images/night_few_clouds.svg\";\r\nimport nightClearSky from \"../images/night_clear_sky.svg\";\r\nimport scatteredClouds from \"../images/scattered_clouds.svg\";\r\nimport showerRain from \"../images/shower_rain.svg\";\r\nimport snow from \"../images/snow.svg\";\r\nimport thunderStorm from \"../images/thunderstorm.svg\";\r\nimport weatherLogo from \"../images/weather-logo.svg\";\r\n\r\nconst api = {\r\n  key: \"cb6c26f0569f865f8485400d1d8d011a\",\r\n  base: \"https://api.openweathermap.org/data/2.5/\",\r\n};\r\n\r\nconst date = new Date();\r\n\r\nconst Main = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = (evt) => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setWeather(result);\r\n          setQuery(\"\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return ` ${day}, ${date} ${month} ${year}`;\r\n  };\r\n\r\n  const getContinent = () => {\r\n    console.log(weather.sys.country);\r\n    if (weather.sys.country === \"ES\" || weather.sys.country === \"DE\") {\r\n      return \"Europe\";\r\n    }\r\n    return;\r\n  };\r\n\r\n  const switchImg = () => {\r\n    if (date.getHours() < 6 || date.getHours() > 21) {\r\n      switch (weather.weather[0].main) {\r\n        case \"Clear\":\r\n          return (\r\n            <img\r\n              src={nightClearSky}\r\n              alt=\"illustration weather description clear\"\r\n            />\r\n          );\r\n        case \"Clouds\":\r\n          return (\r\n            <img\r\n              src={nightFewClouds}\r\n              alt=\"illustration weather description clouds\"\r\n            />\r\n          );\r\n        case \"Drizzle\":\r\n          return (\r\n            <img\r\n              src={scatteredClouds}\r\n              alt=\"illustration weather description drizzle\"\r\n            />\r\n          );\r\n        case \"Rain\":\r\n          return (\r\n            <img src={showerRain} alt=\"illustration weather description rain\" />\r\n          );\r\n        case \"Thunderstorm\":\r\n          return (\r\n            <img\r\n              src={thunderStorm}\r\n              alt=\"illustration weather description thunderstorm\"\r\n            />\r\n          );\r\n        case \"Snow\":\r\n          return <img src={snow} alt=\"illustration weather description snow\" />;\r\n        default:\r\n          return (\r\n            <img\r\n              src={scatteredClouds}\r\n              alt=\"illustration weather description clouds\"\r\n            />\r\n          );\r\n      }\r\n    } else {\r\n      switch (weather.weather[0].main) {\r\n        case \"Clear\":\r\n          return (\r\n            <img\r\n              src={clearSky}\r\n              alt=\"illustration weather description clear sky\"\r\n            />\r\n          );\r\n        case \"Clouds\":\r\n          return (\r\n            <img\r\n              src={fewClouds}\r\n              alt=\"illustration weather description clouds\"\r\n            />\r\n          );\r\n        case \"Drizzle\":\r\n          return (\r\n            <img\r\n              src={scatteredClouds}\r\n              alt=\"illustration weather description drizzle\"\r\n            />\r\n          );\r\n        case \"Rain\":\r\n          return (\r\n            <img src={showerRain} alt=\"illustration weather description rain\" />\r\n          );\r\n        case \"Thunderstorm\":\r\n          return (\r\n            <img\r\n              src={thunderStorm}\r\n              alt=\"illustration weather description thunderstorm\"\r\n            />\r\n          );\r\n        case \"Snow\":\r\n          return <img src={snow} alt=\"illustration weather description snow\" />;\r\n        default:\r\n          return (\r\n            <img\r\n              src={scatteredClouds}\r\n              alt=\"illustration weather description clouds\"\r\n            />\r\n          );\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        typeof weather.main != \"undefined\"\r\n          ? weather.main.temp > 16\r\n            ? \"app warm\"\r\n            : \"app\"\r\n          : \"app\"\r\n      }\r\n    >\r\n      <main>\r\n        <div className=\"container\">\r\n          <img className=\"weather-logo\" src={weatherLogo} alt=\"\" />\r\n          {typeof weather.main != \"undefined\" ? (\r\n            <div className=\"content\">\r\n              <div className=\"temp-box\">\r\n                <div className=\"temp\">{Math.round(weather.main.temp)}</div>\r\n                <span className=\"deg\">°c</span>\r\n              </div>\r\n              <div className=\"image-box\">{switchImg()}</div>\r\n              <div className=\"location-box\">\r\n                <div className=\"location\">\r\n                  {weather.name}, {weather.sys.country}\r\n                </div>\r\n                <div className=\"date\">\r\n                  <span>\r\n                    {moment()\r\n                      .tz(`${getContinent()}/${weather.name}`)\r\n                      .format(\"hh:mm\")}\r\n                  </span>\r\n                  {dateBuilder(date)}\r\n                </div>\r\n              </div>\r\n              <div className=\"weather\">{weather.weather[0].description}</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"hint\">Write the name of the city in the search</div>\r\n          )}\r\n          <div className=\"search-box\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search...\"\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              value={query}\r\n              onKeyPress={search}\r\n            />\r\n          </div>\r\n          <Footer></Footer>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}